// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  role      Role     @default(USER)
  orders    Order[]
}

enum Role {
  USER
  ADMIN
}

model Product {
  id             Int               @id @default(autoincrement())
  createdAt      DateTime          @default(now())
  updatedAt      DateTime          @updatedAt
  name           String            @unique @db.VarChar(255)
  description    String?
  stock          Int
  price          Int
  discount       Int               @default(0)
  actualPrice    Int
  images         ImageURL[]
  published      Boolean           @default(false)
  orderedProduct OrderedProducts[]
  Order          Order[]
}

model ImageURL {
  id          Int     @id @default(autoincrement())
  url         String
  description String  @db.VarChar(255)
  poductId    Int
  product     Product @relation(fields: [poductId], references: [id])
}

model OrderedProducts {
  id                     Int      @id @default(autoincrement())
  order                  Order    @relation(fields: [orderId], references: [id])
  Product                Product  @relation(fields: [productId], references: [id])
  orderId                Int
  productId              Int
  quantity               Int
  registeredProductPrice Int
  TotalPrice             Int
  createdAt              DateTime @default(now())
}

model Order {
  id              Int               @id @default(autoincrement())
  createdAt       DateTime          @default(now())
  orderOwner      User              @relation(fields: [userId], references: [id])
  userId          Int
  products        Product[]
  orderedProducts OrderedProducts[]
  totalPrice      Int
}
